//
//  SignupInterfaces.swift
//  IOS-combine
//
//  Created by usama farooq on 30/08/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

enum SignupNavigationOptions {
    case login
    case channel
}

typealias SignupComplition = ((Result<UserResponse, Error>) -> Void)
typealias SingupOutput = (SignupPresenter.Output) -> Void

protocol SignupWireframeInterface: WireframeInterface {
    func navigate(to options: SignupNavigationOptions)
}

protocol SignupViewInterface: ViewInterface {
}

protocol SignupPresenterInterface: PresenterInterface {
    
    var interactor: SignupInteractorInterface {get set}
    var output: SingupOutput? {get set}
    func signup(with userName: String, email: String, password: String)
    func login()
}

protocol SignupInteractorInterface: InteractorInterface {
    var presenter: SignupInterectorToPresenter? {get set}
    func singup(with request: SignupRequest)
}


protocol SignupInterectorToPresenter: AnyObject {
    func didRegister()
    func failToRegister(with message: String)
}
