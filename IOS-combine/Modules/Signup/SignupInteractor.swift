//
//  SignupInteractor.swift
//  IOS-combine
//
//  Created by usama farooq on 30/08/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation

final class SignupInteractor : BaseDataStore {
    
    let singupService = SignupService(service: NetworkService())
    weak var presenter: SignupInterectorToPresenter?
    
}

// MARK: - Extensions -

extension SignupInteractor: SignupInteractorInterface {
    func singup(with request: SignupRequest) {
        singupService.singup(with: request) { [weak self] result in
            guard let self = self else {return}
            DispatchQueue.main.async {
                switch result {
                case .success(let response):
                    switch response.status {
                    case 200:
                        self.presenter?.didRegister()
                    default:
                        self.presenter?.failToRegister(with: response.message)
                    }
                case .failure(let error):
                    self.presenter?.failToRegister(with: error.localizedDescription)
                    
                }
            }
          
        }
    }
    
    

}
