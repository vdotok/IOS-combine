//
//  SignupPresenter.swift
//  IOS-combine
//
//  Created by usama farooq on 30/08/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation

final class SignupPresenter {

    // MARK: - Private properties -

    private unowned let view: SignupViewInterface
    private let interactor: SignupInteractorInterface
    private let wireframe: SignupWireframeInterface

    // MARK: - Lifecycle -

    init(
        view: SignupViewInterface,
        interactor: SignupInteractorInterface,
        wireframe: SignupWireframeInterface
    ) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension SignupPresenter: SignupPresenterInterface {
    func signup(with userName: String, email: String, password: String) {
        let request = SignupRequest(fullName: userName, email: email, password: password)
        interactor.singup(with: request) { [weak self] result in
            guard let self = self else {return}
            switch result {
            case .success(let response):
                self.wireframe.navigate(to: .channel)
                break
            case .failure(let error):
                break
                
            }
        }
    }
    
    func login() {
        wireframe.navigate(to: .login)
    }
    
    
}
