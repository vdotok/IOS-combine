//
//  LoginInteractor.swift
//  IOS-combine
//
//  Created by usama farooq on 30/08/2021.
//  Copyright ¬© 2021 VDOTOK. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation

final class LoginInteractor {
    
    weak var presenter: loginInteractorToPresenterInterface?
    var loginService: LoginService = LoginService(service: NetworkService())
    
}

// MARK: - Extensions -

extension LoginInteractor: LoginInteractorInterface {
    func login(with email: String, password: String) {
        loginService.loginWith(email: email, password: password) { [weak self] result in
            guard let self = self else {return}
            DispatchQueue.main.async {
                switch result {
                case .success(let respons):
                    switch respons.status {
                    case 200:
                        self.presenter?.loginSucces()
                    default:
                        self.presenter?.loginFail(with: respons.message)
                    }
                case .failure(let error):
                    self.presenter?.loginFail(with: error.localizedDescription)
                }
            }
          
        }
    }
    
  

    
}
