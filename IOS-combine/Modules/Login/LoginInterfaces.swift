//
//  LoginInterfaces.swift
//  IOS-combine
//
//  Created by usama farooq on 30/08/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

typealias LoginOutput = (LoginPresenter.Output) -> Void

typealias loginComplition = ((Result<UserResponse, Error>) -> Void)


enum LoginNavigationOption {
    case signup
    case channel
}

protocol LoginWireframeInterface: WireframeInterface {
    func navigate(to option: LoginNavigationOption)
}

protocol LoginViewInterface: ViewInterface {
}

protocol LoginPresenterInterface: PresenterInterface {
    
    var interactor: LoginInteractorInterface? {get set}
    var output: LoginOutput? {get set}
    func viewDidLoad()
    func login(with email: String, password: String)
    func signup()
}

protocol LoginInteractorInterface: InteractorInterface {
    var presenter: loginInteractorToPresenterInterface? {get set}
    func login(with email: String, password: String)
    
}

protocol loginInteractorToPresenterInterface: AnyObject {
    func loginSucces()
    func loginFail(with error: String)
}
