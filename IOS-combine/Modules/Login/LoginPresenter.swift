//
//  LoginPresenter.swift
//  IOS-combine
//
//  Created by usama farooq on 30/08/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation

final class LoginPresenter {

    // MARK: - Private properties -

    private unowned let view: LoginViewInterface
    private let interactor: LoginInteractorInterface
    private let wireframe: LoginWireframeInterface

    // MARK: - Lifecycle -

    init(
        view: LoginViewInterface,
        interactor: LoginInteractorInterface,
        wireframe: LoginWireframeInterface
    ) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension LoginPresenter: LoginPresenterInterface {
    func viewDidLoad() {
        
    }
    
    func login(with email: String, password: String) {
        let request = LoginRequest(email: email , password: password)
        interactor.login(with: request) { [weak self] result in
            guard let self = self else {return}
            switch result {
            case .success(let response):
                DispatchQueue.main.async {
                    self.wireframe.navigate(to: .channel)
                }
            case .failure(let error):
                break
            }
        }
    }
    
    func signup() {
        wireframe.navigate(to: .signup)
    }
    
}
